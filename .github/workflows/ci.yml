name: CI

on:
  release:
    types:
      - published
  push:
    paths:
      - "setup.*"
      - "src/**"
      - "hass-addon-sunsynk-multi/**"
      - ".github/workflows/deploy-multi.yml"
      - ".github/workflows/ci.yml"
  pull_request:
    paths:
      - "setup.*"
      - "src/**"
      - "hass-addon-sunsynk-multi/**"
      - ".github/workflows/deploy-multi.yml"
      - ".github/workflows/ci.yml"

env:
  DEFAULT_PYTHON: 3.11

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: chartboost/ruff-action@v1
        with:
          #src: "./src"
          version: 0.1.0

  black:
    name: Check black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - uses: psf/black@23.10.0
        with:
          options: "--check"
          src: "src/"

  lint:
    name: Check pylint, mypy & pydocstyle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Install local sunsynk package
        run: pip install -e .[pymodbus,umodbus,solarman,tests]
      - name: Run Pylint
        run: pylint src
      - name: Run mypy
        continue-on-error: true
        run: mypy src/

  pytest:
    name: Run tests Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    needs:
      - ruff
      - black
      - lint
    env:
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install local sunsynk package
        run: pip install -e .[pymodbus,umodbus,solarman,tests]
      - name: Run tests and generate coverage report
        run: pytest --cov=./src --cov-report=xml src
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: PYTHON
          verbose: true

  build-n-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    needs:
      - pytest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Install pypa/build
        run: python -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: python -m build --sdist --wheel --outdir dist/ .
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
